{"version":3,"sources":["redux/types.ts","redux/state-reducer.ts","redux/index.ts","components/data.ts","redux/actions.ts","components/transportation/Transportation.tsx","App.tsx","index.tsx"],"names":["FTL_NEWS","TOGGLE_IS_ERROR","TOGGLE_IS_LOADING","ADD_REQUEST_TRANSPORTATION","initialState","FTL","transportationRequest","isError","isLoading","rootReducer","combineReducers","state","action","type","value","payload","configurationStore","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","liftingСapacity","id","bootMethod","typeOfCargo","HazardClass","setToggleErrorAC","setToggleLoadingAC","antIcon","LoadingOutlined","style","fontSize","spin","Option","Select","TextArea","Input","Transportation","useSelector","console","log","dispatch","useDispatch","useState","_from","setFrom","_to","setTo","_LiftingСapacity","setLiftingСapacity","_BootMethod","setBootMethod","_TypeOfCargo","setTypeOfCargo","_checkbox","setCheckbox","_hazardClass","setHazardClass","_price","setPrice","_datePicker","setDatePicker","isSuccess","setIsSuccess","textareaValue","setTextareaValue","className","labelCol","span","offset","wrapperCol","layout","maxWidth","Item","label","onChange","currentTarget","width","placeholder","optionFilterProp","map","Number","checked","target","e","date","_d","year","Date","getFullYear","day","getDate","manth","toLocaleString","month","autoSize","minRows","maxRows","onClick","parse","from","to","checkbox","hazardClass","price","datePicker","indicator","marginLeft","App","store","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18559fd7.chunk.js","sourcesContent":["export const FTL_NEWS = \"FTL_NEWS\";\r\nexport const TOGGLE_IS_ERROR = \"TOGGLE_IS_ERROR\";\r\nexport const TOGGLE_IS_LOADING = \"TOGGLE_IS_LOADING\";\r\nexport const ADD_REQUEST_TRANSPORTATION = \"ADD_REQUEST_TRANSPORTATION\";\r\nexport const DATES_SORT_SAGA = \"DATES_SORT_SAGA\";\r\n","import {\r\n  FTL_NEWS,\r\n  TOGGLE_IS_ERROR,\r\n  TOGGLE_IS_LOADING,\r\n  ADD_REQUEST_TRANSPORTATION,\r\n} from \"./types\";\r\n\r\nexport interface Itransportation {\r\n  id: number;\r\n  bootMethod: string;\r\n  checkbox: boolean;\r\n  datePicker: string;\r\n  from: string;\r\n  hazardClass: string;\r\n  liftingСapacity: string;\r\n  price: string;\r\n  to: string;\r\n  typeOfCargo: string;\r\n}\r\n\r\nexport interface IRootState {\r\n  FTL: string | null;\r\n  transportationRequest: Itransportation[] | null;\r\n  isError: boolean;\r\n  isLoading: boolean;\r\n}\r\n\r\n\r\n\r\nconst initialState: IRootState = {\r\n  FTL: \"Прямая машина\",\r\n  transportationRequest: [],\r\n  isError: false,\r\n  isLoading: false,\r\n};\r\n\r\nexport const stateReducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case ADD_REQUEST_TRANSPORTATION:\r\n      return {\r\n        ...state,\r\n        transportationRequest: [state.transportationRequest, action.value],\r\n      };\r\n\r\n    case FTL_NEWS:\r\n      return { ...state, FTL: action.payload };\r\n\r\n    case TOGGLE_IS_ERROR:\r\n      return { ...state, isError: action.value };\r\n\r\n    case TOGGLE_IS_LOADING:\r\n      return { ...state, isLoading: action.value };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {stateReducer} from \"./state-reducer\";\r\nimport {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  state: stateReducer\r\n});\r\n\r\nconst configurationStore = () => {\r\n  const store = createStore(rootReducer, compose(\r\n  applyMiddleware(\r\n    // sagaMiddleware\r\n  ),\r\n  //@ts-ignore\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n));\r\n\r\nreturn store\r\n};\r\n\r\nexport default configurationStore();\r\n\r\n\r\n//sagaMiddleware.run(sagaWatcher);\r\n","export interface IitemOption  {\r\n  id: number\r\n  value: string\r\n}\r\n\r\nexport const liftingСapacity: IitemOption[] = [\r\n  {id: 1, value: '1 тонна' },\r\n  {id: 2, value: '3 тонны' },\r\n  {id: 3, value: '5 тонн' },\r\n  {id: 4, value: '10 тонн' },\r\n];\r\n\r\nexport const bootMethod: IitemOption[] = [\r\n  {id: 1, value: 'Открытая' },\r\n  {id: 2, value: 'Закрытая' },\r\n];\r\n\r\nexport const typeOfCargo: IitemOption[] = [\r\n  {id: 1, value: 'Сыпучий' },\r\n  {id: 2, value: 'Твердый' },\r\n  {id: 3, value: 'Опасный' },\r\n];\r\n\r\nexport const HazardClass: IitemOption[] = [\r\n  {id: 1, value: '1 класс' },\r\n  {id: 2, value: '2 класс' },\r\n  {id: 3, value: '3 класс' },\r\n  {id: 4, value: '4 класс' },\r\n];\r\n\r\n","import {\r\n  TOGGLE_IS_ERROR,\r\n  TOGGLE_IS_LOADING,\r\n  ADD_REQUEST_TRANSPORTATION,\r\n} from \"./types\";\r\n\r\nexport const setToggleErrorAC = (value: boolean) => ({\r\n  type: TOGGLE_IS_ERROR,\r\n  value,\r\n});\r\nexport const setToggleLoadingAC = (value: boolean) => ({\r\n  type: TOGGLE_IS_LOADING,\r\n  value,\r\n});\r\nexport const setAddRequestTransportationAC = (value: any) => ({\r\n  type: ADD_REQUEST_TRANSPORTATION,\r\n  value,\r\n});\r\n","import React, { ChangeEvent, useState } from \"react\";\r\nimport { DefaultRootState, useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { bootMethod, HazardClass, liftingСapacity, typeOfCargo } from \"../data\";\r\nimport {\r\n  setToggleErrorAC,\r\n  setToggleLoadingAC,\r\n  setAddRequestTransportationAC,\r\n} from \"../../redux/actions\";\r\nimport { IRootState } from \"../../redux/state-reducer\";\r\n\r\nimport { Form, Input, Button, Select, DatePicker, Checkbox, Spin } from \"antd\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\nimport \"./style.scss\";\r\n\r\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nexport const Transportation: React.FC = () => {\r\n  const FTL = useSelector((state: DefaultRootState) => {\r\n    console.log(state);\r\n    //@ts-ignore\r\n    return state.state.FTL;\r\n  });\r\n  //@ts-ignore\r\n  const isError = useSelector((state: IRootState) => state.state.isError);\r\n  //@ts-ignore\r\n  const isLoading = useSelector((state: IRootState) => state.state.isLoading);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [_from, setFrom] = useState<string>();\r\n  const [_to, setTo] = useState<string>();\r\n  const [_LiftingСapacity, setLiftingСapacity] = useState<string>();\r\n  const [_BootMethod, setBootMethod] = useState<string>();\r\n  const [_TypeOfCargo, setTypeOfCargo] = useState<string>();\r\n  const [_checkbox, setCheckbox] = useState<boolean>();\r\n  const [_hazardClass, setHazardClass] = useState<string>();\r\n  const [_price, setPrice] = useState<number>(0);\r\n  const [_datePicker, setDatePicker] = useState<string>();\r\n  const [isSuccess, setIsSuccess] = useState<boolean>(false);\r\n  const [textareaValue, setTextareaValue] = useState<string>();\r\n\r\n  const fromHandler = ({\r\n    currentTarget: { value },\r\n  }: ChangeEvent<HTMLInputElement>) => setFrom(value);\r\n\r\n  const toHandler = ({\r\n    currentTarget: { value },\r\n  }: ChangeEvent<HTMLInputElement>) => setTo(value);\r\n\r\n  const liftingСapacityHandler = (value: string) => setLiftingСapacity(value);\r\n  const bootMethodHandler = (value: string) => setBootMethod(value);\r\n  const typeOfCargoHandler = (value: string) => setTypeOfCargo(value);\r\n\r\n  const checkboxHandler = ({ target: { checked } }: any) =>\r\n    setCheckbox(checked);\r\n\r\n  const hazardClassHandler = (value: string) => setHazardClass(value);\r\n\r\n  const priceHandler = ({\r\n    currentTarget: { value },\r\n  }: ChangeEvent<HTMLInputElement>) => {\r\n    Number(value) >= 0 && setPrice(Number(value));\r\n  };\r\n\r\n  const datePickerHandler = (e: any) => {\r\n    const date = e._d;\r\n    const year = new Date(date).getFullYear();\r\n    const day = new Date(date).getDate();\r\n    const manth = new Date(date).toLocaleString(\"en\", { month: \"long\" });\r\n    setDatePicker(`${day} ${manth} ${year} г.`);\r\n  };\r\n\r\n  const textareaHandler = ({\r\n    target: { value },\r\n  }: ChangeEvent<HTMLTextAreaElement>) => setTextareaValue(value);\r\n\r\n  const sabmitHandler = () => {\r\n    dispatch(setToggleLoadingAC(true));\r\n    if (\r\n      !_from ||\r\n      !_to ||\r\n      !_LiftingСapacity ||\r\n      !_BootMethod ||\r\n      !_TypeOfCargo ||\r\n      !_hazardClass ||\r\n      !_price ||\r\n      !_datePicker\r\n    ) {\r\n      dispatch(setToggleLoadingAC(false));\r\n      dispatch(setToggleErrorAC(true));\r\n    } else {\r\n      dispatch(setToggleLoadingAC(false));\r\n      dispatch(setToggleErrorAC(false));\r\n      dispatch(\r\n        setAddRequestTransportationAC({\r\n          //@ts-ignore\r\n          id: Date.parse(new Date()),\r\n          from: _from,\r\n          to: _to,\r\n          liftingСapacity: _LiftingСapacity,\r\n          bootMethod: _BootMethod,\r\n          typeOfCargo: _TypeOfCargo,\r\n          checkbox: _checkbox,\r\n          hazardClass: _hazardClass,\r\n          price: _price,\r\n          datePicker: _datePicker,\r\n        })\r\n      );\r\n      setIsSuccess(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"transportation\">\r\n      <Form\r\n        labelCol={{ span: 4, offset: 18 }}\r\n        wrapperCol={{ span: 14 }}\r\n        layout=\"vertical\"\r\n        style={{ maxWidth: 800 }}\r\n      >\r\n        <Form.Item>\r\n          <span className=\"ant-form-text transportation__title\">\r\n            FTL: {FTL}\r\n          </span>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Для расчета стоимости необходимо ввести параметры груза, пункты\r\n              отправки и прибытия.\"\r\n          className=\"transportation__label-title\"\r\n        >\r\n          <div className=\"transportation__title-input\">\r\n            <span className=\"transportation__item\">1</span>Маршрут\r\n          </div>\r\n          <div className=\"transportation__text\">Откуда</div>\r\n\r\n          <Input style={{ maxWidth: \"730px\" }} onChange={fromHandler} />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <div className=\"transportation__text\">Куда</div>\r\n          <Input style={{ maxWidth: \"730px\" }} onChange={toHandler} />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <div className=\"transportation__title-input\">\r\n            <span className=\"transportation__item\">2</span>Транспорт\r\n          </div>\r\n          <div className=\"transportation__text\">Грузоподьемность</div>\r\n          <Select\r\n            style={{ width: 175 }}\r\n            placeholder=\"Не выбран\"\r\n            optionFilterProp=\"children\"\r\n            onChange={liftingСapacityHandler}\r\n          >\r\n            {liftingСapacity.map(({ id, value }) => (\r\n              <Option value={value} key={id}>\r\n                {value}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n          ,\r\n          <Select\r\n            style={{ width: 175 }}\r\n            placeholder=\"Не выбран\"\r\n            optionFilterProp=\"children\"\r\n            onChange={bootMethodHandler}\r\n          >\r\n            {bootMethod.map(({ id, value }) => (\r\n              <Option value={value} key={id}>\r\n                {value}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n          ,\r\n          <div className=\"transportation__text transportation__text_rightSelect\">\r\n            Способ погрузки\r\n          </div>\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <div className=\"transportation__title-input\">\r\n            <span className=\"transportation__item\">3</span>Груз\r\n          </div>\r\n          <div className=\"transportation__text\">Тип груза</div>\r\n          <div>\r\n            <Select\r\n              style={{ maxWidth: 356 }}\r\n              placeholder=\"Не выбран\"\r\n              optionFilterProp=\"children\"\r\n              onChange={typeOfCargoHandler}\r\n            >\r\n              {typeOfCargo.map(({ id, value }) => (\r\n                <Option value={value} key={id}>\r\n                  {value}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </div>\r\n          <br />\r\n          <div className=\"transportation__text\">Класс опасности</div>\r\n          <Select\r\n            style={{ width: 175 }}\r\n            placeholder=\"Не выбран\"\r\n            optionFilterProp=\"children\"\r\n            onChange={hazardClassHandler}\r\n          >\r\n            {HazardClass.map(({ id, value }) => (\r\n              <Option value={value} key={id}>\r\n                {value}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n          ,\r\n          <Input\r\n            style={{ width: 175 }}\r\n            type=\"number\"\r\n            value={_price}\r\n            onChange={priceHandler}\r\n          />\r\n          <div className=\"transportation__text transportation__text_rightSelect3\">\r\n            Объявленная ценность, ₽\r\n          </div>\r\n          <br />\r\n          <Checkbox onChange={checkboxHandler}>\r\n            <span className=\"transportation__checkbox transportation__text\">\r\n              Требуеться температурный режим\r\n            </span>\r\n          </Checkbox>\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <div className=\"transportation__title-input\">\r\n            <span className=\"transportation__item\">4</span>Время\r\n          </div>\r\n\r\n          <div className=\"transportation__text\">\r\n            Когда прибыть на точку\r\n            <span className=\"transportation__text transportation__text4\">\r\n              700км в день\r\n            </span>\r\n          </div>\r\n          <DatePicker\r\n            style={{ width: \"100%\" }}\r\n            placeholder=\"Дата не выбрана\"\r\n            onChange={datePickerHandler}\r\n          />\r\n\r\n          {isSuccess && (\r\n            <div className=\"transportation__notification\">\r\n              Заявка успешно отправлена\r\n            </div>\r\n          )}\r\n          {isError && (\r\n            <div className=\"transportation__notification transportation__notification_error\">\r\n              Заполните все поля формы\r\n            </div>\r\n          )}\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <div className=\"transportation__text\">Коментарий к заказу</div>\r\n          <TextArea\r\n            style={{ maxWidth: 730 }}\r\n            value={textareaValue}\r\n            onChange={textareaHandler}\r\n            placeholder=\"Укажите особенности въезда на территорию склада или подъезда к адресу\"\r\n            autoSize={{ minRows: 3, maxRows: 5 }}\r\n          />\r\n        </Form.Item>\r\n        <Button style={{ width: 160 }} onClick={sabmitHandler}>\r\n          Отправить заявку\r\n        </Button>\r\n        {isLoading && (\r\n          <Spin indicator={antIcon} style={{ marginLeft: \"10px\" }} />\r\n        )}\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport { Transportation } from './components/transportation/Transportation';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Transportation />\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport configurationStore from \"./redux/index\";\n\nimport App from './App';\nimport 'antd/dist/antd.css';\nimport '../src/styles/index.scss';\n\nconst store = configurationStore;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}